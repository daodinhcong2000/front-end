{"version":3,"sources":["../node_modules/@coreui/icons/js/free/cil-cloud-download.js","app/seller/views/dashboard/Dashboard.js"],"names":["cilCloudDownload","WidgetsDropdown","lazy","Dashboard","useState","statistics","setStatistics","totalAmount","setTotalAmount","orderCount","setOrderCount","useEffect","getUserInformation","then","respone","getRevenue","data","_id","from","moment","subtract","to","className","sm","id","numberSeparator","color","icon","map","value","active","style","height","marginTop","labels","statistic","date","datasets","label","backgroundColor","hexToRgba","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","fill","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","Math","ceil","max","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth"],"mappings":"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","file":"static/js/15.65046666.chunk.js","sourcesContent":["export const cilCloudDownload = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='272 434.744 272 209.176 240 209.176 240 434.744 188.118 382.862 165.49 405.489 256 496 346.51 405.489 323.882 382.862 272 434.744' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M400,161.176c0-79.4-64.6-144-144-144s-144,64.6-144,144a96,96,0,0,0,0,192h80v-32H112a64,64,0,0,1,0-128h32v-32a112,112,0,0,1,224,0v32h32a64,64,0,0,1,0,128H320v32h80a96,96,0,0,0,0-192Z' class='ci-primary'/>\"]","import React, { lazy, useState, useEffect } from 'react'\n\nimport { CButton, CButtonGroup, CCard, CCardBody, CCardFooter, CCol, CRow } from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport { cilCloudDownload } from '@coreui/icons'\nimport { getUserInformation } from '../../../../services/api/customerApi'\nimport { getRevenue } from '../../../../services/api/sellerApi'\nimport numberSeparator from '../../../../helpers/validating/numberSeparator'\nimport moment from 'moment'\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\n\nconst Dashboard = () => {\n  const [statistics, setStatistics] = useState([])\n  const [totalAmount, setTotalAmount] = useState([])\n  const [orderCount, setOrderCount] = useState([])\n\n  useEffect(() => {\n    getUserInformation().then((respone) => {\n      getRevenue(respone.data.data._id, { from: moment().subtract(7, 'day'), to: moment() }).then((respone) => {\n        setTotalAmount(respone.data.data.totalAmount)\n        setOrderCount(respone.data.data.orderCount)\n        setStatistics(respone.data.data.statistics)\n      })\n    })\n  }, [])\n\n  return (\n    <>\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Doanh thu bán hàng\n              </h4>\n              <div className=\"small text-medium-emphasis\">Tổng doanh thu: {numberSeparator(totalAmount)} VNĐ</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Ngày', 'Tháng', 'Năm'].map((value) => (\n                  <CButton color=\"outline-secondary\" key={value} className=\"mx-0\" active={value === 'Ngày'}>\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: statistics ? statistics.map((statistic) => statistic.date) : [],\n              datasets: [\n                {\n                  label: 'Doanh thu',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: statistics ? statistics.map((statistic) => statistic.totalAmount) : [],\n                  fill: true\n                }\n              ]\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false\n                }\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false\n                  }\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250\n                  }\n                }\n              },\n              elements: {\n                line: {\n                  tension: 0.4\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3\n                }\n              }\n            }}\n          />\n        </CCardBody>\n        <CCardFooter></CCardFooter>\n      </CCard>\n\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Số lượng đơn hàng\n              </h4>\n              <div className=\"small text-medium-emphasis\">Tổng đơn hàng: {orderCount}</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Ngày', 'Tháng', 'Năm'].map((value) => (\n                  <CButton color=\"outline-secondary\" key={value} className=\"mx-0\" active={value === 'Ngày'}>\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: statistics ? statistics.map((statistic) => statistic.date) : [],\n              datasets: [\n                {\n                  label: 'Số đơn hàng',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: statistics ? statistics.map((statistic) => statistic.orderCount) : [],\n                  fill: true\n                }\n              ]\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false\n                }\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false\n                  }\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250\n                  }\n                }\n              },\n              elements: {\n                line: {\n                  tension: 0.4\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3\n                }\n              }\n            }}\n          />\n        </CCardBody>\n        <CCardFooter></CCardFooter>\n      </CCard>\n      <WidgetsDropdown />\n    </>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}