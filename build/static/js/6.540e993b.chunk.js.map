{"version":3,"sources":["app/seller/components/FormDetailDelete.js","app/seller/components/TableProduct.js","app/seller/views/products/DeleteProduct.js"],"names":["FormDetailDelete","Input","TextArea","recvData","useState","data","images","imageUrls","sizes","className","htmlFor","disabled","type","id","name","placeholder","value","rows","description","xs","map","size","i","numberInStock","imageUrl","idx","fluid","src","width","height","price","TableProduct","columns","usersData","useToast","error","warn","success","info","details","setDetails","idDelete","setIdDelete","idProduct","idDeleteProduct","productIds","_id","getBadge","rate","activePage","cleaner","clickableRows","columnFilter","columnSorter","items","itemsPerPageSelect","itemsPerPage","pagination","scopedColumns","status","item","color","show_details","variant","shape","onClick","index","position","indexOf","newDetails","slice","splice","toggleDetails","includes","class","onChange","prev","filter","visible","FormDetail","sorterValue","column","state","tableFilter","tableHeadProps","tableProps","striped","hover","console","log","shop","length","deleteProduct","then","respone","message","setTimeout","window","location","reload","catch","err","response","DeleteProduct","shopId","setShopId","listShop","setListShop","dataProducts","setDataProducts","useEffect","getShops","getProducts","products","e","target","label","key","_style","_props","sorter"],"mappings":"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","file":"static/js/6.540e993b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form, Input } from \"antd\";\nimport axios from \"axios\";\nimport { useState, useRef } from \"react\";\nimport {\n  CButton,\n  CCol,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CFormLabel,\n  CFormCheck,\n  CFormTextarea,\n  CInputGroupText,\n  CImage,\n  CRow,\n  CFormFeedback,\n  CFormSelect,\n} from \"@coreui/react\";\nconst { TextArea } = Input;\n\nconst FormDetailDelete = (recvData) => {\n  const [data, setData] = useState(recvData.data);\n  const [imageUrls, setImageUrls] = useState(data.images);\n  const [sizes, setSizes] = useState(data.sizes);\n\n  return (\n    <div>\n      <CForm className=\"row g-3\">\n        <div className=\"mb-3\">\n          <CFormLabel htmlFor=\"exampleFormControlInput1\">\n            Tên sản phẩm\n          </CFormLabel>\n          <CFormInput\n            disabled\n            type=\"text\"\n            id=\"exampleFormControlInput1\"\n            name=\"name\"\n            placeholder=\"Nhập tên sản phẩm\"\n            value={data.name}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <CFormLabel htmlFor=\"exampleFormControlTextarea1\">\n            Mô tả sản phẩm\n          </CFormLabel>\n          <CFormTextarea\n            disabled\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            name=\"description\"\n            value={data.description}\n          ></CFormTextarea>\n        </div>\n        <div className=\"mb-3\">\n          <CFormLabel htmlFor=\"exampleFormControlInput1\">\n            Loại sản phẩm\n          </CFormLabel>\n          <CFormInput\n            disabled\n            type=\"text\"\n            id=\"exampleFormControlInput1\"\n            name=\"category\"\n            value={data.description}\n          />\n        </div>\n        <CCol xs={12}>\n          <CFormLabel htmlFor=\"inputAddress\">Kích thước</CFormLabel>\n          {sizes.map((size, i) => {\n            return (\n              <div className=\"box\">\n                <CRow>\n                  <CCol xs>\n                    <CFormInput name=\"name\" value={size.name} disabled />\n                  </CCol>\n                  <CCol xs>\n                    <CFormInput\n                      name=\"numberInStock\"\n                      value={size.numberInStock}\n                      disabled\n                    />\n                  </CCol>\n                </CRow>\n              </div>\n            );\n          })}\n        </CCol>\n        <CCol xs={12}>\n          {imageUrls &&\n            imageUrls.map((imageUrl , idx) => {\n              return <CImage fluid src={imageUrl} width={150} height={150} key = {idx}/>;\n            })}\n        </CCol>\n        <CInputGroup className=\"mb-3\">\n          <CInputGroupText>$</CInputGroupText>\n          <CFormInput\n            aria-label=\"Amount (to the nearest dollar)\"\n            name=\"price\"\n            disabled\n            value={data.price}\n          />\n          <CInputGroupText>VNĐ</CInputGroupText>\n        </CInputGroup>\n      </CForm>\n    </div>\n  );\n};\nexport default FormDetailDelete;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  CSmartTable,\n  CBadge,\n  CButton,\n  CCollapse,\n  CCardBody,\n} from \"@coreui/react-pro\";\nimport FormDetail from \"./FormDetail\";\nimport FormDetailDelete from \"./FormDetailDelete\";\nimport { deleteProduct } from \"../../../services/api/sellerApi\";\nimport { useToast} from \"../../../contexts/toast\"\n\n\nconst TableProduct = ({ columns, usersData, type }) => {\n  const { error, warn, info, success } = useToast();\n  const [details, setDetails] = useState([]);\n  const [idDelete, setIdDelete] = useState([]);\n  const idProduct = [];\n  const idDeleteProduct = {\n    productIds: [],\n  };\n  usersData.map((data, i) => {\n    idProduct[i] = data._id;\n    data.idProduct = data._id;\n  });\n\n  const handleDelete = () => {\n    console.log(usersData[0].shop._id);\n    idDelete.map((id, i) => (idDeleteProduct.productIds[i] = idProduct[id]));\n    if(idDeleteProduct.productIds.length == 0){\n      warn(\"Vui lòng chọn sản phẩm cần xóa\")\n    }\n    else{\n      deleteProduct(usersData[0].shop._id, idDeleteProduct)\n      .then((respone) => {\n        console.log(\"res\", respone);\n        if (respone.data.success == true) {\n          setIdDelete([])\n          success(respone.data.message);\n          setTimeout(window.location.reload(), 3000);\n        } else {\n          error(respone.data.message);\n        }\n      })\n      .catch((err) => {\n        error(err.response.data.message);\n      });\n    }\n  };\n  const getBadge = (rate) => {\n    switch (rate) {\n      case \"5\":\n        return \"success\";\n      case \"5\":\n        return \"secondary\";\n      case \"Pending\":\n        return \"warning\";\n      case \"Banned\":\n        return \"danger\";\n      default:\n        return \"primary\";\n    }\n  };\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index);\n    let newDetails = details.slice();\n    if (position !== -1) {\n      newDetails.splice(position, 1);\n    } else {\n      newDetails = [...details, index];\n    }\n    setDetails(newDetails);\n  };\n  const handleCheck = (id) => {\n    setIdDelete((prev) => {\n      const isChecked = idDelete.includes(id);\n      if (isChecked) {\n        return idDelete.filter((item) => item != id);\n      } else {\n        return [...prev, id];\n      }\n    });\n  };\n\n  return (\n    <div>\n      <CSmartTable\n        activePage={3}\n        cleaner\n        clickableRows\n        columns={columns}\n        columnFilter\n        columnSorter\n        items={usersData}\n        itemsPerPageSelect\n        itemsPerPage={5}\n        pagination\n        scopedColumns={{\n          status: (item) => (\n            <td>\n              <CBadge color={getBadge(item.status)}>{item.status}</CBadge>\n            </td>\n          ),\n          show_details: (item) => {\n            return (\n              <td className=\"py-2\">\n                <div>\n                  <CButton\n                    color=\"primary\"\n                    variant=\"outline\"\n                    shape=\"square\"\n                    size=\"sm\"\n                    onClick={() => {\n                      toggleDetails(item._id);\n                    }}\n                  >\n                    {details.includes(item._id) ? \"Hide\" : \"Show\"}\n                  </CButton>\n                  {type === \"fix\" ? (\n                    \"\"\n                  ) : (\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      idDelete={idDelete.includes(item._id)}\n                      onChange={() => handleCheck(item._id)}\n                      id=\"checkProduct\"\n                    ></input>\n                  )}\n                </div>\n              </td>\n            );\n          },\n          details: (item) => {\n            return (\n              <CCollapse visible={details.includes(item._id)}>\n                <CCardBody>\n                  {type === \"fix\" ? (\n                    <FormDetail data={item} />\n                  ) : (\n                    <FormDetailDelete data={item} />\n                  )}\n                </CCardBody>\n              </CCollapse>\n            );\n          },\n        }}\n        sorterValue={{ column: \"name\", state: \"asc\" }}\n        tableFilter\n        tableHeadProps={{\n          color: \"none\",\n        }}\n        tableProps={{\n          striped: true,\n          hover: true,\n        }}\n      />\n      {type === \"fix\" ? \"\" : <CButton onClick={handleDelete}> xóa </CButton>}\n    </div>\n  );\n};\n\nexport default TableProduct;\n","import React, { useState, useEffect } from \"react\";\nimport TableProduct from \"../../components/TableProduct\";\nimport {\n  getShops,\n  postProduct,\n  getProducts,\n} from \"../../../../services/api/sellerApi\";\nimport { CFormSelect } from \"@coreui/react\";\nconst DeleteProduct = () => {\n  const [shopId, setShopId] = useState(\"\");\n  const [listShop, setListShop] = useState([]);\n  const [dataProducts, setDataProducts] = useState([]);\n  useEffect(() => {\n    getShops().then((response) => {\n      setListShop(response.data.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (shopId != \"\" && shopId != 1 ) {\n      getProducts(shopId).then((response) => {\n        setDataProducts(response.data.data.products);\n        console.log(dataProducts)\n      });\n    }\n  }, [shopId]);\n\n  const columns = [\n    {\n      label: \"Tên sản Phẩm\",\n      key: \"name\",\n      _style: { width: \"40%\" },\n      _props: { className: \"fw-semibold\" },\n    },\n    {\n      label: \"Ngày bán\",\n      key: \"createdAt\",\n    },\n    {\n      label: \"Loại hàng\",\n      key: \"category\",\n      filter: true,\n      sorter: false,\n      _style: { width: \"20%\" },\n    },\n    { label: \"Đánh giá\", key: \"rating\", _style: { width: \"20%\" } },\n    {\n      key: \"show_details\",\n      label: \"\",\n      _style: { width: \"1%\" },\n      filter: false,\n      sorter: false,\n      _props: { color: \"primary\", className: \"fw-semibold\" },\n    },\n  ];\n\n\n  return (\n    <div>\n      <div className=\"mb-3\">\n        <CFormSelect\n          aria-label=\"Default select example\"\n          onChange={(e) => setShopId(e.target.value)}\n        >\n          <option value = \"1\">Chọn shop</option>\n          {listShop.map((shop) => {\n            return <option value={shop._id} key={shop._id}>{shop.name}</option>;\n          })}\n        </CFormSelect>\n      </div>\n      <TableProduct columns={columns} usersData={dataProducts} />\n    </div>\n  );\n};\nexport default DeleteProduct;\n"],"sourceRoot":""}