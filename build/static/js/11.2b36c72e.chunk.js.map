{"version":3,"sources":["services/api/adminApi.js","app/admin/views/user/ListUser.js"],"names":["apiRequest","makeAuthRequest","urlUser","urlAdmin","getUsers","url","method","putActiveUser","idUser","payload","data","deleteUser","getShops","query","queryString","query2string","putApproved","idShop","ListUsersDetail","useState","listUsers","setListUsers","useEffect","then","response","users","console","log","getBadge","role","activePage","cleaner","clickableRows","columns","label","key","_style","width","_props","className","filter","sorter","columnFilter","columnSorter","items","itemsPerPageSelect","itemsPerPage","pagination","scopedColumns","email","item","roles","color","length","sorterValue","column","state","tableFilter","tableProps","striped","hover"],"mappings":"mGAAA,+LACMA,EAAaC,aAAgB,GAE7BC,EAAU,oBACVC,EAAW,qBAEJC,EAAW,WACtB,OAAOJ,EAAW,CAChBK,IAAI,GAAD,OAAKH,EAAL,UACHI,OAAQ,SAICC,EAAgB,SAACC,EAAQC,GACpC,OAAOT,EAAW,CAChBK,IAAI,GAAD,OAAKH,EAAL,kBAAsBM,GACzBF,OAAQ,MACRI,KAAMD,KAIGE,EAAa,SAACH,GACzB,OAAOR,EAAW,CAChBK,IAAI,GAAD,OAAKH,EAAL,kBAAsBM,GACzBF,OAAQ,YAICM,EAAW,WAAe,IAAD,uBAAVC,EAAU,yBAAVA,EAAU,gBACpC,IAAMC,EAAcC,YAAaF,GACjC,OAAOb,EAAW,CAChBK,IAAI,GAAD,OAAKF,EAAL,kBAAuBW,GAC1BR,OAAQ,SAICU,EAAc,SAACC,EAAQR,GAClC,OAAOT,EAAW,CAChBK,IAAI,GAAD,OAAKF,EAAL,kBAAuBc,EAAvB,aACHX,OAAQ,MACRI,KAAMD,M,oFCsCKS,UA1ES,WACtB,IAoBA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACAC,qBAAU,WACRlB,cAAWmB,MAAK,SAACC,GACfH,EAAaG,EAASd,KAAKA,KAAKe,YAEjC,IAEHC,QAAQC,IAAI,OAAQP,GACpB,IAAMQ,EAAW,SAACC,GAChB,OAAQA,GACN,IAAK,WACH,MAAO,UACT,IAAK,SACH,MAAO,UACT,IAAK,QACH,MAAO,SACT,QACE,MAAO,YAIb,OACE,8BACE,cAAC,IAAD,CACEC,WAAY,EACZC,SAAO,EACPC,eAAa,EACbC,QA/CU,CACd,CACEC,MAAO,4BACPC,IAAK,WACLC,OAAQ,CAAEC,MAAO,OACjBC,OAAQ,CAAEC,UAAW,gBAEvB,CACEL,MAAO,QACPC,IAAK,SAEP,CACED,MAAO,oCACPC,IAAK,cACLK,QAAQ,EACRC,QAAQ,EACRL,OAAQ,CAAEC,MAAO,QAEnB,CAAEH,MAAO,aAAWC,IAAK,QAASC,OAAQ,CAAEC,MAAO,SA8B/CK,cAAY,EACZC,cAAY,EACZC,MAAOxB,EACPyB,oBAAkB,EAClBC,aAAc,EACdC,YAAU,EACVC,cAAe,CACbC,MAAO,SAACC,GAAD,OAAU,6BAAmB,IAAdA,EAAKD,MAAcC,EAAKD,MAAQ,MACtDE,MAAO,SAACD,GAAD,OACL,6BACE,cAAC,IAAD,CAAQE,MAAOxB,EAASsB,EAAKC,MAAMD,EAAKC,MAAME,OAAS,IAAvD,SAA6DH,EAAKC,MAAMD,EAAKC,MAAME,OAAS,SAIlGC,YAAa,CAAEC,OAAQ,OAAQC,MAAO,OACtCC,aAAW,EACXC,WAAY,CACVC,SAAS,EACTC,OAAO","file":"static/js/11.2b36c72e.chunk.js","sourcesContent":["import { makeAuthRequest } from '../makeApiRequest'\nconst apiRequest = makeAuthRequest(true)\nimport query2string from '../../helpers/validating/query2string'\nconst urlUser = '/user-service/api'\nconst urlAdmin = '/admin-service/api'\n\nexport const getUsers = () => {\n  return apiRequest({\n    url: `${urlUser}/users`,\n    method: 'GET'\n  })\n}\n\nexport const putActiveUser = (idUser, payload) => {\n  return apiRequest({\n    url: `${urlUser}/users/${idUser}`,\n    method: 'PUT',\n    data: payload\n  })\n}\n\nexport const deleteUser = (idUser) => {\n  return apiRequest({\n    url: `${urlUser}/users/${idUser}`,\n    method: 'DELETE'\n  })\n}\n\nexport const getShops = (...query) => {\n  const queryString = query2string(query)\n  return apiRequest({\n    url: `${urlAdmin}/shops?${queryString}`,\n    method: 'GET'\n  })\n}\n\nexport const putApproved = (idShop, payload) => {\n  return apiRequest({\n    url: `${urlAdmin}/shops/${idShop}/approval`,\n    method: 'PUT',\n    data: payload\n  })\n}\n","import React, { useState, useEffect } from 'react'\nimport { getUsers } from '../../../../services/api/adminApi'\nimport { CSmartTable, CBadge } from '@coreui/react-pro'\n\nconst ListUsersDetail = () => {\n  const columns = [\n    {\n      label: 'Tên sản Phẩm',\n      key: 'username',\n      _style: { width: '40%' },\n      _props: { className: 'fw-semibold' }\n    },\n    {\n      label: 'Email',\n      key: 'email'\n    },\n    {\n      label: 'Số điện thoại',\n      key: 'phoneNumber',\n      filter: true,\n      sorter: false,\n      _style: { width: '20%' }\n    },\n    { label: 'Vai trò', key: 'roles', _style: { width: '20%' } }\n  ]\n  const [listUsers, setListUsers] = useState([])\n  useEffect(() => {\n    getUsers().then((response) => {\n      setListUsers(response.data.data.users)\n    })\n  }, [])\n\n  console.log('user', listUsers)\n  const getBadge = (role) => {\n    switch (role) {\n      case 'customer':\n        return 'success'\n      case 'seller':\n        return 'warning'\n      case 'admin':\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n\n  return (\n    <div>\n      <CSmartTable\n        activePage={3}\n        cleaner\n        clickableRows\n        columns={columns}\n        columnFilter\n        columnSorter\n        items={listUsers}\n        itemsPerPageSelect\n        itemsPerPage={5}\n        pagination\n        scopedColumns={{\n          email: (item) => <td>{item.email != '' ? item.email : ''}</td>,\n          roles: (item) => (\n            <td>\n              <CBadge color={getBadge(item.roles[item.roles.length - 1])}>{item.roles[item.roles.length - 1]}</CBadge>\n            </td>\n          )\n        }}\n        sorterValue={{ column: 'name', state: 'asc' }}\n        tableFilter\n        tableProps={{\n          striped: true,\n          hover: true\n        }}\n      />\n    </div>\n  )\n}\n\nexport default ListUsersDetail\n"],"sourceRoot":""}