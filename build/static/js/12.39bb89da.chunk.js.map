{"version":3,"sources":["services/api/adminApi.js","app/admin/views/user/listUsersDetail.js"],"names":["apiRequest","makeAuthRequest","urlUser","urlAdmin","getUsers","url","method","putActiveUser","idUser","payload","data","deleteUser","getShops","query","queryString","query2string","putApproved","idShop","ListUsersDetail","useToast","error","success","warn","info","useState","details","setDetails","listUsers","setListUsers","useEffect","then","response","users","map","i","_id","getBadge","role","activePage","cleaner","clickableRows","columns","label","key","_style","width","_props","className","filter","sorter","color","columnFilter","columnSorter","items","itemsPerPageSelect","itemsPerPage","pagination","scopedColumns","email","item","roles","length","show_details","variant","shape","size","onClick","index","event","preventDefault","position","indexOf","newDetails","slice","splice","toggleDetails","includes","visible","xs","htmlFor","name","disabled","value","firstName","lastName","isActive","user","status","respone","message","setTimeout","window","location","reload","catch","err","changeStatus","sorterValue","column","state","tableFilter","tableProps","striped","hover"],"mappings":"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","file":"static/js/12.39bb89da.chunk.js","sourcesContent":["import { makeAuthRequest } from '../makeApiRequest'\nconst apiRequest = makeAuthRequest(true)\nimport query2string from '../../helpers/validating/query2string'\nconst urlUser = '/user-service/api'\nconst urlAdmin = '/admin-service/api'\n\nexport const getUsers = () => {\n  return apiRequest({\n    url: `${urlUser}/users`,\n    method: 'GET'\n  })\n}\n\nexport const putActiveUser = (idUser, payload) => {\n  return apiRequest({\n    url: `${urlUser}/users/${idUser}`,\n    method: 'PUT',\n    data: payload\n  })\n}\n\nexport const deleteUser = (idUser) => {\n  return apiRequest({\n    url: `${urlUser}/users/${idUser}`,\n    method: 'DELETE'\n  })\n}\n\nexport const getShops = (...query) => {\n  const queryString = query2string(query)\n  return apiRequest({\n    url: `${urlAdmin}/shops?${queryString}`,\n    method: 'GET'\n  })\n}\n\nexport const putApproved = (idShop, payload) => {\n  return apiRequest({\n    url: `${urlAdmin}/shops/${idShop}/approval`,\n    method: 'PUT',\n    data: payload\n  })\n}\n","import React, { useState, useEffect } from 'react'\nimport { getUsers, deleteUser, putActiveUser } from '../../../../services/api/adminApi'\nimport { CSmartTable, CBadge, CButton, CCollapse, CCardBody } from '@coreui/react-pro'\nimport { CCol, CFormInput, CFormLabel, CRow } from '@coreui/react'\nimport { useToast } from '../../../../contexts/toast'\n\nconst ListUsersDetail = () => {\n  const { error, warn, info, success } = useToast()\n  const [details, setDetails] = useState([])\n  const columns = [\n    {\n      label: 'Tên tài khoản',\n      key: 'username',\n      _style: { width: '40%' },\n      _props: { className: 'fw-semibold' }\n    },\n    {\n      label: 'Email',\n      key: 'email'\n    },\n    {\n      label: 'Số điện thoại',\n      key: 'phoneNumber',\n      filter: true,\n      sorter: false,\n      _style: { width: '20%' }\n    },\n    { label: 'Vai trò', filter: false, key: 'roles', _style: { width: '20%' } },\n    {\n      key: 'show_details',\n      label: '',\n      _style: { width: '1%' },\n      filter: false,\n      sorter: false,\n      _props: { color: 'primary', className: 'fw-semibold' }\n    }\n  ]\n  const [listUsers, setListUsers] = useState([])\n  useEffect(() => {\n    getUsers().then((response) => {\n      response.data.data.users.map((data, i) => {\n        data.idUser = data._id\n      })\n      setListUsers(response.data.data.users)\n    })\n  }, [])\n\n  const getBadge = (role) => {\n    switch (role) {\n      case 'customer':\n        return 'success'\n      case 'seller':\n        return 'warning'\n      case 'admin':\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n\n  const toggleDetails = (index) => {\n    event.preventDefault()\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n    setDetails(newDetails)\n  }\n\n  const handleDelete = (idUser) => {\n    //console.log(idUser)\n    deleteUser(idUser)\n      .then((respone) => {\n        success(respone.data.message)\n        setTimeout(window.location.reload(false), 3000)\n      })\n      .catch((err) => {\n        error(err.response.data.message)\n      })\n  }\n  const changeStatus = (user) => {\n    const status = {\n      isActive: !user.isActive\n    }\n    putActiveUser(user.idUser, status)\n      .then((respone) => {\n        success(respone.data.message)\n        setTimeout(window.location.reload(false), 3000)\n      })\n      .catch((err) => {\n        error(err.response.data.message)\n      })\n  }\n  return (\n    <div>\n      <CSmartTable\n        activePage={3}\n        cleaner\n        clickableRows\n        columns={columns}\n        columnFilter\n        columnSorter\n        items={listUsers}\n        itemsPerPageSelect\n        itemsPerPage={5}\n        pagination\n        scopedColumns={{\n          email: (item) => <td>{item.email != '' ? item.email : ''}</td>,\n          roles: (item) => (\n            <td>\n              <CBadge color={getBadge(item.roles[item.roles.length - 1])}>{item.roles[item.roles.length - 1]}</CBadge>\n            </td>\n          ),\n          show_details: (item) => {\n            return (\n              <td className=\"py-2\">\n                <CButton\n                  variant=\"outline\"\n                  shape=\"square\"\n                  size=\"sm\"\n                  onClick={() => {\n                    toggleDetails(item._id)\n                  }}\n                >\n                  {details.includes(item._id) ? 'Hide' : 'Show'}\n                </CButton>\n              </td>\n            )\n          },\n          details: (item) => {\n            return (\n              <CCollapse visible={details.includes(item._id)}>\n                <CCardBody>\n                  <div className=\"mb-3\">\n                    <CRow>\n                      <CCol xs>\n                        <CFormLabel htmlFor=\"exampleFormControlInput1\">Họ</CFormLabel>\n                        <CFormInput\n                          aria-label=\"Amount (to the nearest dollar)\"\n                          name=\"price\"\n                          disabled\n                          value={item.firstName}\n                        />\n                      </CCol>\n                      <CCol xs>\n                        <CFormLabel htmlFor=\"exampleFormControlInput1\">Tên</CFormLabel>\n                        <CFormInput\n                          aria-label=\"Amount (to the nearest dollar)\"\n                          name=\"originalPrice\"\n                          disabled\n                          value={item.lastName}\n                        />\n                      </CCol>\n                    </CRow>\n                  </div>\n                  <div className=\"mb-3\">\n                    <CRow>\n                      <CCol xs>\n                        <CFormLabel htmlFor=\"exampleFormControlInput1\">Trạng thái:</CFormLabel>\n                        {item.isActive ? (\n                          <CButton color=\"success\" variant=\"outline\" disabled>\n                            Đã kích hoạt\n                          </CButton>\n                        ) : (\n                          <CButton disabled color=\"danger\" variant=\"outline\">\n                            Chưa kích hoạt\n                          </CButton>\n                        )}\n                      </CCol>\n                      <CCol xs>\n                        {item.roles[item.roles.length - 1] != 'admin' ? (\n                          <CButton color=\"info\" variant=\"outline\" onClick={() => changeStatus(item)}>\n                            Đổi trạng thái\n                          </CButton>\n                        ) : (\n                          ''\n                        )}\n                      </CCol>\n                    </CRow>\n                  </div>\n                  <div className=\"mb-3\">\n                    {item.roles[item.roles.length - 1] != 'admin' ? (\n                      <CButton color=\"danger\" shape=\"rounded-pill\" onClick={() => handleDelete(item.idUser)}>\n                        Xóa\n                      </CButton>\n                    ) : (\n                      ''\n                    )}\n                  </div>\n                </CCardBody>\n              </CCollapse>\n            )\n          }\n        }}\n        sorterValue={{ column: 'name', state: 'asc' }}\n        tableFilter\n        tableProps={{\n          striped: true,\n          hover: true\n        }}\n      />\n    </div>\n  )\n}\n\nexport default ListUsersDetail\n"],"sourceRoot":""}