{"version":3,"sources":["app/seller/views/orders/WaitingOrder.js"],"names":["WaitingOrder","useState","listShop","setListShop","listOrder","setListOrder","shopId","setShopId","details","setDetails","loading","setLoading","useToast","error","success","warn","info","useEffect","getShops","then","response","data","getOrders","status","map","i","idOrder","_id","getBadge","className","onChange","e","target","value","shop","name","fallback","activePage","cleaner","clickableRows","columns","label","key","_style","width","_props","filter","sorter","color","columnFilter","columnSorter","items","itemsPerPageSelect","itemsPerPage","pagination","noItemsLabel","scopedColumns","item","customer","lastName","firstName","phone","phoneNumber","ORDER_STATUSES_MAPPING","show_details","variant","shape","size","onClick","index","position","indexOf","newDetails","slice","splice","toggleDetails","includes","visible","htmlFor","hover","scope","product","quantity","price","type","disabled","sellingAddress","xs","shippingCost","totalPrice","confirmOrder","respone","message","window","location","reload","catch","err","cancelOrder","sorterValue","column","state","tableFilter","tableProps","striped"],"mappings":"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","file":"static/js/15.22f58998.chunk.js","sourcesContent":["import React, { useState, useEffect, Suspense } from 'react'\nimport { getShops, getOrders, confirmOrder, cancelOrder } from '../../../../services/api/sellerApi'\nimport { CSmartTable, CBadge, CFormSelect, CButton, CCollapse, CCardBody } from '@coreui/react-pro'\nimport { ORDER_STATUSES_MAPPING } from 'accommerce-helpers'\nimport {\n  CTableRow,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableDataCell,\n  CTableBody,\n  CHeaderBrand,\n  CCol,\n  CFormInput,\n  CInputGroup,\n  CFormLabel,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport { useToast } from '../../../../contexts/toast'\nconst WaitingOrder = () => {\n  const columns = [\n    {\n      label: 'Tên người nhận hàng',\n      key: 'name',\n      _style: { width: '40%' },\n      _props: { className: 'fw-semibold' }\n    },\n    {\n      label: 'Số điện thoại',\n      key: 'phone'\n    },\n    {\n      label: 'Địa chỉ',\n      key: 'receivingAddress',\n      filter: true,\n      sorter: false,\n      _style: { width: '20%' }\n    },\n    { label: 'Trạng thái', key: 'status', _style: { width: '20%' } },\n    {\n      key: 'show_details',\n      label: '',\n      _style: { width: '1%' },\n      filter: false,\n      sorter: false,\n      _props: { color: 'primary', className: 'fw-semibold' }\n    }\n  ]\n  const [listShop, setListShop] = useState([])\n  const [listOrder, setListOrder] = useState([])\n  const [shopId, setShopId] = useState('0')\n  const [details, setDetails] = useState([])\n  const [loading, setLoading] = useState(true)\n  const { error, warn, info, success } = useToast()\n\n  useEffect(() => {\n    getShops({}).then((response) => {\n      setListShop(response.data.data)\n    })\n  }, [])\n  useEffect(() => {\n    if (shopId != '0') {\n      getOrders(shopId, { status: 'Waiting for seller confirm' }).then((response) => {\n        response.data.data.map((data, i) => {\n          data.idOrder = data._id\n        })\n        setListOrder(response.data.data)\n        setLoading(false)\n      })\n    }\n  }, [shopId])\n  const getBadge = (status) => {\n    switch (status) {\n      case 'Delivered':\n        return 'success'\n      case 'Waiting for seller confirm':\n        return 'warning'\n      case 'In transit':\n        return 'info'\n      case 'Cancelled by customer':\n        return 'danger'\n      case 'Cancelled by seller':\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n    setDetails(newDetails)\n  }\n\n  const cfOrder = (idOrder) => {\n    confirmOrder(shopId, idOrder)\n      .then((respone) => {\n        success(respone.data.message)\n        window.location.reload(false)\n      })\n      .catch((err) => {\n        error(err.response.data.message)\n      })\n  }\n\n  const clOrder = (idOrder) => {\n    cancelOrder(shopId, idOrder)\n      .then((respone) => {\n        success(respone.data.message)\n        window.location.reload(false)\n      })\n      .catch((err) => {\n        error(err.response.data.message)\n      })\n  }\n  return (\n    <div>\n      <div className=\"mb-3\">\n        <CFormSelect\n          aria-label=\"Default select example\"\n          onChange={(e) => {\n            setShopId(e.target.value)\n            setLoading(true)\n          }}\n        >\n          <option value=\"0\">Chọn shop</option>\n          {listShop.map((shop) => {\n            return (\n              <option value={shop._id} key={shop._id}>\n                {shop.name}\n              </option>\n            )\n          })}\n        </CFormSelect>\n      </div>\n      <Suspense fallback={<h1>Loading posts...</h1>}>\n        <CSmartTable\n          activePage={3}\n          cleaner\n          clickableRows\n          columns={columns}\n          columnFilter\n          columnSorter\n          loading={loading}\n          items={listOrder}\n          itemsPerPageSelect\n          itemsPerPage={5}\n          pagination\n          noItemsLabel=\"Chưa có đơn hàng nào chờ xác nhận.\"\n          scopedColumns={{\n            name: (item) => (\n              <td>\n                {item.customer.lastName} {item.customer.firstName}\n              </td>\n            ),\n            phone: (item) => <td>{item.customer.phoneNumber}</td>,\n            status: (item) => (\n              <td>\n                <CBadge color={getBadge(item.status)}>{ORDER_STATUSES_MAPPING[item.status]}</CBadge>\n              </td>\n            ),\n            show_details: (item) => {\n              return (\n                <td className=\"py-2\">\n                  <CButton\n                    color=\"primary\"\n                    variant=\"outline\"\n                    shape=\"square\"\n                    size=\"sm\"\n                    onClick={() => {\n                      toggleDetails(item._id)\n                    }}\n                  >\n                    {details.includes(item._id) ? 'Hide' : 'Show'}\n                  </CButton>\n                </td>\n              )\n            },\n            details: (item) => {\n              return (\n                <CCollapse visible={details.includes(item._id)}>\n                  <CCardBody>\n                    <CHeaderBrand htmlFor=\"exampleFormControlInput1\">Danh sách sản phẩm của đơn hàng</CHeaderBrand>\n                    <CTable hover>\n                      <CTableHead>\n                        <CTableRow>\n                          <CTableHeaderCell scope=\"col\">Tên sản phẩm</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Size</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Số lượng</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Giá sản phẩm</CTableHeaderCell>\n                        </CTableRow>\n                      </CTableHead>\n                      {item.items.map((data, i) => {\n                        return (\n                          <CTableBody>\n                            <CTableRow>\n                              <CTableDataCell>{data.product.name}</CTableDataCell>\n                              <CTableDataCell>{data.size}</CTableDataCell>\n                              <CTableDataCell>{data.quantity}</CTableDataCell>\n                              <CTableDataCell>{data.price} VNĐ</CTableDataCell>\n                            </CTableRow>\n                          </CTableBody>\n                        )\n                      })}\n                    </CTable>\n                    <div className=\"mb-3\">\n                      <CFormLabel htmlFor=\"exampleFormControlInput1\">Nơi lấy hàng</CFormLabel>\n                      <CFormInput type=\"text\" disabled value={item.sellingAddress} />\n                    </div>\n                    <div className=\"mb-3\">\n                      <CRow>\n                        <CCol xs>\n                          <CFormLabel htmlFor=\"exampleFormControlInput1\">Giá vận chuyển</CFormLabel>\n                          <CInputGroup>\n                            <CFormInput type=\"text\" disabled value={item.shippingCost} />\n                            <CInputGroupText>VNĐ</CInputGroupText>\n                          </CInputGroup>\n                        </CCol>\n                        <CCol xs>\n                          <CFormLabel htmlFor=\"exampleFormControlInput1\">Tổng giá trị đơn hàng</CFormLabel>\n                          <CInputGroup>\n                            <CFormInput type=\"text\" disabled value={item.shippingCost + item.totalPrice} />\n                            <CInputGroupText>VNĐ</CInputGroupText>\n                          </CInputGroup>\n                        </CCol>\n                      </CRow>\n                    </div>\n                    {item.status == 'Waiting for seller confirm' ? (\n                      <div className=\"mb-3\">\n                        <CRow>\n                          <CCol xs>\n                            <CButton color=\"success\" onClick={() => cfOrder(item.idOrder)}>\n                              {' '}\n                              Xác nhận{' '}\n                            </CButton>\n                          </CCol>\n                          <CCol>\n                            <CButton color=\"danger\" onClick={() => clOrder(item.idOrder)}>\n                              {' '}\n                              Hủy{' '}\n                            </CButton>\n                          </CCol>\n                        </CRow>\n                      </div>\n                    ) : (\n                      ''\n                    )}\n                  </CCardBody>\n                </CCollapse>\n              )\n            }\n          }}\n          sorterValue={{ column: 'name', state: 'asc' }}\n          tableFilter\n          tableProps={{\n            striped: true,\n            hover: true\n          }}\n        />\n      </Suspense>\n    </div>\n  )\n}\n\nexport default WaitingOrder\n"],"sourceRoot":""}