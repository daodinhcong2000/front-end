{"version":3,"sources":["services/api/adminApi.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError.js","app/admin/components/Chart.js","app/admin/views/statistics/StatisticShop.js"],"names":["apiRequest","makeAuthRequest","urlUser","urlAdmin","urlStatistics","getUsers","query","queryString","query2string","url","method","putActiveUser","idUser","payload","data","deleteUser","getShops","name","Error","putApproved","idShop","putActiveShop","deleteShop","getRevenue","getRevenueSeller","idSeller","getRevenueShop","getRevenueCustomer","idCustomer","WidgetsDropdown","lazy","Chart","statistics","totalAmount","orderCount","title","console","log","className","sm","id","color","icon","cilCloudDownload","map","value","active","style","height","marginTop","labels","statistic","date","datasets","label","backgroundColor","hexToRgba","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","fill","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","Math","ceil","max","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","StatisticShop","useState","listShop","setListShops","shopId","setShopId","setStatistics","setTotalAmount","setOrderCount","useEffect","then","response","from","moment","subtract","to","respone","onChange","e","target","shop","_id"],"mappings":"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","file":"static/js/13.9d7322d9.chunk.js","sourcesContent":["import { makeAuthRequest } from '../makeApiRequest'\nconst apiRequest = makeAuthRequest(true)\nimport query2string from '../../helpers/validating/query2string'\nconst urlUser = '/user-service/api'\nconst urlAdmin = '/admin-service/api'\nconst urlStatistics = '/statistics-service/api'\nexport const getUsers = (query) => {\n  const queryString = query2string(query)\n  return apiRequest({\n    url: `${urlUser}/users?${queryString}`,\n    method: 'GET'\n  })\n}\n\nexport const putActiveUser = (idUser, payload) => {\n  return apiRequest({\n    url: `${urlUser}/users/${idUser}`,\n    method: 'PUT',\n    data: payload\n  })\n}\n\nexport const deleteUser = (idUser) => {\n  return apiRequest({\n    url: `${urlUser}/users/${idUser}`,\n    method: 'DELETE'\n  })\n}\n\nexport const getShops = (query) => {\n  const queryString = ''\n  if (query != null) {\n    queryString = query2string(query)\n  }\n\n  return apiRequest({\n    url: `${urlAdmin}/shops?${queryString}`,\n    method: 'GET'\n  })\n}\n\nexport const putApproved = (idShop, payload) => {\n  return apiRequest({\n    url: `${urlAdmin}/shops/${idShop}/approval`,\n    method: 'PUT',\n    data: payload\n  })\n}\n\nexport const putActiveShop = (idShop, payload) => {\n  return apiRequest({\n    url: `${urlAdmin}/shops/${idShop}/active-status`,\n    method: 'PUT',\n    data: payload\n  })\n}\n\nexport const deleteShop = (idShop) => {\n  return apiRequest({\n    url: `${urlAdmin}/shops/${idShop}`,\n    method: 'DELETE'\n  })\n}\n\nexport const getRevenue = (query) => {\n  const queryString = query2string(query)\n  return apiRequest({\n    url: `${urlStatistics}/order-statistics?${queryString}`,\n    method: 'GET'\n  })\n}\n\nexport const getRevenueSeller = (idSeller, query) => {\n  const queryString = query2string(query)\n  return apiRequest({\n    url: `${urlStatistics}/sellers/${idSeller}/order-statistics?${queryString}`,\n    method: 'GET'\n  })\n}\n\nexport const getRevenueShop = (idShop, query) => {\n  const queryString = query2string(query)\n  return apiRequest({\n    url: `${urlStatistics}/shops/${idShop}/order-statistics?${queryString}`,\n    method: 'GET'\n  })\n}\n\nexport const getRevenueCustomer = (idCustomer, query) => {\n  const queryString = query2string(query)\n  return apiRequest({\n    url: `${urlStatistics}/customers/${idCustomer}/order-statistics?${queryString}`,\n    method: 'GET'\n  })\n}\n","export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}","import React, { lazy, useState, useEffect } from 'react'\n\nimport { CButton, CButtonGroup, CCard, CCardBody, CCardFooter, CCol, CRow } from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport { cilCloudDownload } from '@coreui/icons'\n\nconst WidgetsDropdown = lazy(() => import('../views/widgets/WidgetsDropdown'))\n\nconst Chart = ({ statistics, totalAmount, orderCount, title }) => {\n  console.log('statistics', statistics)\n  return (\n    <>\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                {title ? title[0] : 'Doanh thu bán hàng'}\n              </h4>\n              <div className=\"small text-medium-emphasis\">\n                {title ? title[1] : 'Tổng doanh thu:'} {totalAmount}VNĐ\n              </div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Ngày', 'Tháng', 'Năm'].map((value) => (\n                  <CButton color=\"outline-secondary\" key={value} className=\"mx-0\" active={value === 'Ngày'}>\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: statistics ? statistics.map((statistic) => statistic.date) : '',\n              datasets: [\n                {\n                  label: title ? title[2] : 'Doanh thu',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: statistics ? statistics.map((statistic) => statistic.totalAmount) : '',\n                  fill: true\n                }\n              ]\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false\n                }\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false\n                  }\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250\n                  }\n                }\n              },\n              elements: {\n                line: {\n                  tension: 0.4\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3\n                }\n              }\n            }}\n          />\n        </CCardBody>\n        <CCardFooter></CCardFooter>\n      </CCard>\n\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Số lượng đơn hàng\n              </h4>\n              <div className=\"small text-medium-emphasis\">Tổng đơn hàng: {orderCount}</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Ngày', 'Tháng', 'Năm'].map((value) => (\n                  <CButton color=\"outline-secondary\" key={value} className=\"mx-0\" active={value === 'Ngày'}>\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: statistics.map((statistic) => statistic.date),\n              datasets: [\n                {\n                  label: 'Số đơn hàng',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: statistics.map((statistic) => statistic.orderCount),\n                  fill: true\n                }\n              ]\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false\n                }\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false\n                  }\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250\n                  }\n                }\n              },\n              elements: {\n                line: {\n                  tension: 0.4\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3\n                }\n              }\n            }}\n          />\n        </CCardBody>\n        <CCardFooter></CCardFooter>\n      </CCard>\n\n      <WidgetsDropdown />\n    </>\n  )\n}\n\nexport default Chart\n","import React, { useState, useEffect } from 'react'\nimport { getRevenueShop, getShops } from '../../../../services/api/adminApi'\nimport { CFormSelect } from '@coreui/react'\nimport moment from 'moment'\nimport Chart from '../../components/Chart'\nconst StatisticShop = () => {\n  const [listShop, setListShops] = useState([])\n  const [shopId, setShopId] = useState('')\n  const [statistics, setStatistics] = useState([])\n  const [totalAmount, setTotalAmount] = useState([])\n  const [orderCount, setOrderCount] = useState([])\n\n  useEffect(() => {\n    getShops().then((response) => {\n      setListShops(response.data.data)\n    })\n  }, [])\n\n  useEffect(() => {\n    if (shopId != '' && shopId != 1) {\n      getRevenueShop(shopId, { from: moment().subtract(7, 'day'), to: moment() }).then((respone) => {\n        setTotalAmount(respone.data.data.totalAmount)\n        setOrderCount(respone.data.data.orderCount)\n        setStatistics(respone.data.data.statistics)\n      })\n    }\n  }, [shopId])\n  return (\n    <div>\n      <div className=\"mb-3\" id=\"changeProduct\">\n        <CFormSelect aria-label=\"Default select example\" onChange={(e) => setShopId(e.target.value)}>\n          <option value=\"1\">Chọn shop để xem</option>\n          {listShop.map((shop) => {\n            return (\n              <option value={shop._id} key={shop._id}>\n                {shop.name}\n              </option>\n            )\n          })}\n        </CFormSelect>\n      </div>\n      {statistics != null ? (\n        <Chart statistics={statistics} totalAmount={totalAmount} orderCount={orderCount} />\n      ) : (\n        'Cửa hàng hiện tại chưa có doanh thu'\n      )}\n    </div>\n  )\n}\nexport default StatisticShop\n"],"sourceRoot":""}