{"version":3,"sources":["services/api/adminApi.js","../node_modules/@coreui/icons/js/free/cil-cloud-download.js","app/admin/components/Chart.js","app/admin/views/statistics/StatisticCustomer.js"],"names":["apiRequest","makeAuthRequest","urlUser","urlAdmin","urlStatistics","getUsers","query","queryString","query2string","url","method","putActiveUser","idUser","payload","data","deleteUser","getShops","putApproved","idShop","putActiveShop","deleteShop","getRevenue","getRevenueSeller","idSeller","getRevenueShop","getRevenueCustomer","idCustomer","cilCloudDownload","WidgetsDropdown","lazy","Title","Typography","Chart","statistics","totalAmount","orderCount","title","className","sm","level","numberSeparator","color","icon","map","value","active","style","height","marginTop","labels","statistic","date","datasets","label","backgroundColor","hexToRgba","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","fill","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","Math","ceil","max","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","antIcon","fontSize","spin","StatisticCustomer","useState","setStatistics","setTotalAmount","setOrderCount","listUser","setListUser","userId","setUserId","loading","setLoading","useEffect","roles","then","response","users","from","moment","subtract","to","respone","id","onChange","e","target","user","_id","username","spinning","indicator"],"mappings":"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","file":"static/js/7.8149859e.chunk.js","sourcesContent":["import { makeAuthRequest } from '../makeApiRequest'\nconst apiRequest = makeAuthRequest(true)\nimport query2string from '../../helpers/validating/query2string'\nconst urlUser = '/user-service/api'\nconst urlAdmin = '/admin-service/api'\nconst urlStatistics = '/statistics-service/api'\nexport const getUsers = (query) => {\n  const queryString = query2string(query)\n  return apiRequest({\n    url: `${urlUser}/users?${queryString}`,\n    method: 'GET'\n  })\n}\n\nexport const putActiveUser = (idUser, payload) => {\n  return apiRequest({\n    url: `${urlUser}/users/${idUser}`,\n    method: 'PUT',\n    data: payload\n  })\n}\n\nexport const deleteUser = (idUser) => {\n  return apiRequest({\n    url: `${urlUser}/users/${idUser}`,\n    method: 'DELETE'\n  })\n}\n\nexport const getShops = (query) => {\n  const queryString = ''\n  if (query != null) {\n    const queryString = query2string(query)\n  }\n\n  return apiRequest({\n    url: `${urlAdmin}/shops?${queryString}`,\n    method: 'GET'\n  })\n}\n\nexport const putApproved = (idShop, payload) => {\n  return apiRequest({\n    url: `${urlAdmin}/shops/${idShop}/approval`,\n    method: 'PUT',\n    data: payload\n  })\n}\n\nexport const putActiveShop = (idShop, payload) => {\n  return apiRequest({\n    url: `${urlAdmin}/shops/${idShop}/active-status`,\n    method: 'PUT',\n    data: payload\n  })\n}\n\nexport const deleteShop = (idShop) => {\n  return apiRequest({\n    url: `${urlAdmin}/shops/${idShop}`,\n    method: 'DELETE'\n  })\n}\n\nexport const getRevenue = (query) => {\n  const queryString = query2string(query)\n  return apiRequest({\n    url: `${urlStatistics}/order-statistics?${queryString}`,\n    method: 'GET'\n  })\n}\n\nexport const getRevenueSeller = (idSeller, query) => {\n  const queryString = query2string(query)\n  return apiRequest({\n    url: `${urlStatistics}/sellers/${idSeller}/order-statistics?${queryString}`,\n    method: 'GET'\n  })\n}\n\nexport const getRevenueShop = (idShop, query) => {\n  const queryString = query2string(query)\n  return apiRequest({\n    url: `${urlStatistics}/shops/${idShop}/order-statistics?${queryString}`,\n    method: 'GET'\n  })\n}\n\nexport const getRevenueCustomer = (idCustomer, query) => {\n  const queryString = query2string(query)\n  return apiRequest({\n    url: `${urlStatistics}/customers/${idCustomer}/order-statistics?${queryString}`,\n    method: 'GET'\n  })\n}\n","export const cilCloudDownload = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='272 434.744 272 209.176 240 209.176 240 434.744 188.118 382.862 165.49 405.489 256 496 346.51 405.489 323.882 382.862 272 434.744' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M400,161.176c0-79.4-64.6-144-144-144s-144,64.6-144,144a96,96,0,0,0,0,192h80v-32H112a64,64,0,0,1,0-128h32v-32a112,112,0,0,1,224,0v32h32a64,64,0,0,1,0,128H320v32h80a96,96,0,0,0,0-192Z' class='ci-primary'/>\"]","import React, { lazy } from 'react'\n\nimport { CButton, CButtonGroup, CCard, CCardBody, CCardFooter, CCol, CRow } from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport { cilCloudDownload } from '@coreui/icons'\nimport { Typography } from 'antd'\n\nimport CIcon from '@coreui/icons-react'\nimport numberSeparator from '../../../helpers/validating/numberSeparator'\nconst WidgetsDropdown = lazy(() => import('../views/widgets/WidgetsDropdown'))\nconst { Title } = Typography\n\nconst Chart = ({ statistics, totalAmount, orderCount, title }) => {\n  return (\n    <>\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <Title level={3}> {title ? title[0] : 'Doanh thu bán hàng'}</Title>\n              <div className=\"small text-medium-emphasis\">\n                {title ? title[1] : 'Tổng doanh thu:'} {numberSeparator(totalAmount)} VNĐ\n              </div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Ngày', 'Tháng', 'Năm'].map((value) => (\n                  <CButton color=\"outline-secondary\" key={value} className=\"mx-0\" active={value === 'Ngày'}>\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: statistics ? statistics.map((statistic) => statistic.date) : '',\n              datasets: [\n                {\n                  label: title ? title[2] : 'Doanh thu',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: statistics ? statistics.map((statistic) => statistic.totalAmount) : '',\n                  fill: true\n                }\n              ]\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false\n                }\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false\n                  }\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250\n                  }\n                }\n              },\n              elements: {\n                line: {\n                  tension: 0.4\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3\n                }\n              }\n            }}\n          />\n        </CCardBody>\n        <CCardFooter></CCardFooter>\n      </CCard>\n\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <Title level={3}>Số lượng đơn hàng</Title>\n              <div className=\"small text-medium-emphasis\">Tổng đơn hàng: {orderCount}</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Ngày', 'Tháng', 'Năm'].map((value) => (\n                  <CButton color=\"outline-secondary\" key={value} className=\"mx-0\" active={value === 'Ngày'}>\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: statistics.map((statistic) => statistic.date),\n              datasets: [\n                {\n                  label: 'Số đơn hàng',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: statistics.map((statistic) => statistic.orderCount),\n                  fill: true\n                }\n              ]\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false\n                }\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false\n                  }\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250\n                  }\n                }\n              },\n              elements: {\n                line: {\n                  tension: 0.4\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3\n                }\n              }\n            }}\n          />\n        </CCardBody>\n        <CCardFooter></CCardFooter>\n      </CCard>\n\n      <WidgetsDropdown />\n    </>\n  )\n}\n\nexport default Chart\n","import React, { useState, useEffect } from 'react'\n\nimport { getRevenueCustomer, getUsers } from '../../../../services/api/adminApi'\nimport Chart from '../../components/Chart'\nimport { CFormSelect } from '@coreui/react'\nimport { Spin } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\n\nimport moment from 'moment'\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\n\nconst StatisticCustomer = () => {\n  const [statistics, setStatistics] = useState([])\n  const [totalAmount, setTotalAmount] = useState([])\n  const [orderCount, setOrderCount] = useState([])\n  const [listUser, setListUser] = useState([])\n  const [userId, setUserId] = useState('')\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    getUsers({ roles: 'customer' }).then((response) => {\n      setListUser(response.data.data.users)\n      setLoading(false)\n    })\n  }, [])\n\n  useEffect(() => {\n    if (userId != '' && userId != 1) {\n      getRevenueCustomer(userId, { from: moment().subtract(7, 'day'), to: moment() }).then((respone) => {\n        setTotalAmount(respone.data.data.totalAmount)\n        setOrderCount(respone.data.data.orderCount)\n        setStatistics(respone.data.data.statistics)\n        setLoading(false)\n      })\n    }\n  }, [userId, loading])\n  return (\n    <div>\n      <div className=\"mb-3\" id=\"changeProduct\">\n        <CFormSelect\n          aria-label=\"Default select example\"\n          onChange={(e) => {\n            setLoading(true)\n            setUserId(e.target.value)\n          }}\n        >\n          <option value=\"1\">Chọn khách hàng để xem</option>\n          {listUser.map((user) => {\n            return (\n              <option value={user._id} key={user._id}>\n                {user.username}\n              </option>\n            )\n          })}\n        </CFormSelect>\n      </div>\n      <Spin spinning={loading} indicator={antIcon}>\n        {statistics != null ? (\n          <Chart\n            statistics={statistics}\n            totalAmount={totalAmount}\n            orderCount={orderCount}\n            title={['Số lượng chi tiêu', 'Tổng chi tiêu', 'Chi tiêu']}\n          />\n        ) : (\n          'Khách hàng chưa chi tiêu cho sản phẩm nào'\n        )}\n      </Spin>\n    </div>\n  )\n}\nexport default StatisticCustomer\n"],"sourceRoot":""}