{"version":3,"sources":["../node_modules/accommerce-helpers/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty.js","app/seller/views/orders/TableOrder.js"],"names":["exports","sendResponse","data","message","eMessage","status","req","res","next","json","success","sendError","error","devInfo","stack","CustomError","Error","ORDER_STATUSES","WAITING_FOR_SELLER_CONFIRM","IN_TRANSIT","DELIVERED","CANCELLED_BY_CUSTOMER","CANCELLED_BY_SELLER","ORDER_STATUSES_MAPPING","Delivered","defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","module","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","obj","value","configurable","writable","TableOrder","useState","listShop","setListShop","listOrder","setListOrder","shopId","setShopId","details","setDetails","useToast","warn","info","useEffect","getShops","then","response","getOrders","map","idOrder","_id","getBadge","className","onChange","e","shop","name","fallback","activePage","cleaner","clickableRows","columns","label","_style","width","_props","sorter","color","columnFilter","columnSorter","items","itemsPerPageSelect","itemsPerPage","pagination","noItemsLabel","scopedColumns","item","customer","lastName","firstName","phone","phoneNumber","show_details","variant","shape","size","onClick","index","position","indexOf","newDetails","slice","splice","toggleDetails","includes","visible","htmlFor","hover","scope","product","quantity","price","type","disabled","sellingAddress","xs","shippingCost","totalPrice","confirmOrder","respone","window","location","reload","catch","err","cancelOrder","sorterValue","column","state","tableFilter","tableProps","striped"],"mappings":"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","file":"static/js/8.8ff25725.chunk.js","sourcesContent":["exports.sendResponse =\n    (data = true, message = 'Thành công', eMessage = 'OK', status = 200) =>\n    (req, res, next) => {\n        res.status(status).json({ success: true, data, message, eMessage })\n    }\n\nexports.sendError = (error, req, res, next) => {\n    // send response with error code\n    res.status(error.status || 500).json({\n        success: false,\n        message: error.message,\n        eMessage: error.eMessage || '',\n        devInfo: { ...error, stack: error.stack },\n    })\n}\n\nexports.CustomError = (message = '', eMessage = '', status = 400) => {\n    const error = new Error(message)\n    error.eMessage = eMessage\n    error.status = status\n\n    return error\n}\n\nexports.ORDER_STATUSES = {\n    WAITING_FOR_SELLER_CONFIRM: 'Waiting for seller confirm',\n    IN_TRANSIT: 'In transit',\n    DELIVERED: 'Delivered',\n    CANCELLED_BY_CUSTOMER: 'Cancelled by customer',\n    CANCELLED_BY_SELLER: 'Cancelled by seller',\n}\n\nexports.ORDER_STATUSES_MAPPING = {\n    'Waiting for seller confirm': 'Chờ người bán xác nhận',\n    'In transit': 'Đang vận chuyển',\n    Delivered: 'Đã giao hàng',\n    'Cancelled by customer': 'Hủy bởi người mua',\n    'Cancelled by seller': 'Hủy bởi người bán',\n}\n","var defineProperty = require(\"./defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread2;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import React, { useState, useEffect, Suspense } from 'react'\nimport { getShops, getOrders, confirmOrder, cancelOrder } from '../../../../services/api/sellerApi'\nimport { CSmartTable, CBadge, CFormSelect, CButton, CCollapse, CCardBody } from '@coreui/react-pro'\nimport { ORDER_STATUSES_MAPPING } from 'accommerce-helpers'\nimport {\n  CTableRow,\n  CTable,\n  CTableHead,\n  CTableHeaderCell,\n  CTableDataCell,\n  CTableBody,\n  CHeaderBrand,\n  CCol,\n  CFormInput,\n  CInputGroup,\n  CFormLabel,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport { useToast } from '../../../../contexts/toast'\nconst TableOrder = () => {\n  const columns = [\n    {\n      label: 'Tên người nhận hàng',\n      key: 'name',\n      _style: { width: '40%' },\n      _props: { className: 'fw-semibold' }\n    },\n    {\n      label: 'Số điện thoại',\n      key: 'phone'\n    },\n    {\n      label: 'Địa chỉ',\n      key: 'receivingAddress',\n      filter: true,\n      sorter: false,\n      _style: { width: '20%' }\n    },\n    { label: 'Trạng thái', key: 'status', _style: { width: '20%' } },\n    {\n      key: 'show_details',\n      label: '',\n      _style: { width: '1%' },\n      filter: false,\n      sorter: false,\n      _props: { color: 'primary', className: 'fw-semibold' }\n    }\n  ]\n  const [listShop, setListShop] = useState([])\n  const [listOrder, setListOrder] = useState([])\n  const [shopId, setShopId] = useState('0')\n  const [details, setDetails] = useState([])\n  const { error, warn, info, success } = useToast()\n\n  useEffect(() => {\n    getShops({}).then((response) => {\n      setListShop(response.data.data)\n    })\n  }, [])\n  useEffect(() => {\n    if (shopId != '0') {\n      getOrders(shopId, {}).then((response) => {\n        response.data.data.map((data, i) => {\n          data.idOrder = data._id\n        })\n        setListOrder(response.data.data)\n      })\n    }\n  }, [shopId])\n  const getBadge = (status) => {\n    switch (status) {\n      case 'Delivered':\n        return 'success'\n      case 'Waiting for seller confirm':\n        return 'warning'\n      case 'In transit':\n        return 'info'\n      case 'Cancelled by customer':\n        return 'danger'\n      case 'Cancelled by seller':\n        return 'danger'\n      default:\n        return 'primary'\n    }\n  }\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n    setDetails(newDetails)\n  }\n\n  const cfOrder = (idOrder) => {\n    confirmOrder(shopId, idOrder)\n      .then((respone) => {\n        success(respone.data.message)\n        window.location.reload(false)\n      })\n      .catch((err) => {\n        error(err.response.data.message)\n      })\n  }\n\n  const clOrder = (idOrder) => {\n    cancelOrder(shopId, idOrder)\n      .then((respone) => {\n        success(respone.data.message)\n        window.location.reload(false)\n      })\n      .catch((err) => {\n        error(err.response.data.message)\n      })\n  }\n  return (\n    <div>\n      <div className=\"mb-3\">\n        <CFormSelect aria-label=\"Default select example\" onChange={(e) => setShopId(e.target.value)}>\n          <option value=\"0\">Chọn shop</option>\n          {listShop.map((shop) => {\n            return (\n              <option value={shop._id} key={shop._id}>\n                {shop.name}\n              </option>\n            )\n          })}\n        </CFormSelect>\n      </div>\n      <Suspense fallback={<h1>Loading posts...</h1>}>\n        <CSmartTable\n          activePage={3}\n          cleaner\n          clickableRows\n          columns={columns}\n          columnFilter\n          columnSorter\n          items={listOrder}\n          itemsPerPageSelect\n          itemsPerPage={5}\n          pagination\n          noItemsLabel=\"Chưa có đơn hàng nào.\"\n          scopedColumns={{\n            name: (item) => (\n              <td>\n                {item.customer.lastName} {item.customer.firstName}\n              </td>\n            ),\n            phone: (item) => <td>{item.customer.phoneNumber}</td>,\n            status: (item) => (\n              <td>\n                <CBadge color={getBadge(item.status)}>{ORDER_STATUSES_MAPPING[item.status]}</CBadge>\n              </td>\n            ),\n            show_details: (item) => {\n              return (\n                <td className=\"py-2\">\n                  <CButton\n                    color=\"primary\"\n                    variant=\"outline\"\n                    shape=\"square\"\n                    size=\"sm\"\n                    onClick={() => {\n                      toggleDetails(item._id)\n                    }}\n                  >\n                    {details.includes(item._id) ? 'Hide' : 'Show'}\n                  </CButton>\n                </td>\n              )\n            },\n            details: (item) => {\n              return (\n                <CCollapse visible={details.includes(item._id)}>\n                  <CCardBody>\n                    <CHeaderBrand htmlFor=\"exampleFormControlInput1\">Danh sách sản phẩm của đơn hàng</CHeaderBrand>\n                    <CTable hover>\n                      <CTableHead>\n                        <CTableRow>\n                          <CTableHeaderCell scope=\"col\">Tên sản phẩm</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Size</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Số lượng</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"col\">Giá sản phẩm</CTableHeaderCell>\n                        </CTableRow>\n                      </CTableHead>\n                      {item.items.map((data, i) => {\n                        return (\n                          <CTableBody>\n                            <CTableRow>\n                              <CTableDataCell>{data.product.name}</CTableDataCell>\n                              <CTableDataCell>{data.size}</CTableDataCell>\n                              <CTableDataCell>{data.quantity}</CTableDataCell>\n                              <CTableDataCell>{data.price} VNĐ</CTableDataCell>\n                            </CTableRow>\n                          </CTableBody>\n                        )\n                      })}\n                    </CTable>\n                    <div className=\"mb-3\">\n                      <CFormLabel htmlFor=\"exampleFormControlInput1\">Nơi lấy hàng</CFormLabel>\n                      <CFormInput type=\"text\" disabled value={item.sellingAddress} />\n                    </div>\n                    <div className=\"mb-3\">\n                      <CRow>\n                        <CCol xs>\n                          <CFormLabel htmlFor=\"exampleFormControlInput1\">Giá vận chuyển</CFormLabel>\n                          <CInputGroup>\n                            <CFormInput type=\"text\" disabled value={item.shippingCost} />\n                            <CInputGroupText>VNĐ</CInputGroupText>\n                          </CInputGroup>\n                        </CCol>\n                        <CCol xs>\n                          <CFormLabel htmlFor=\"exampleFormControlInput1\">Tổng giá trị đơn hàng</CFormLabel>\n                          <CInputGroup>\n                            <CFormInput type=\"text\" disabled value={item.shippingCost + item.totalPrice} />\n                            <CInputGroupText>VNĐ</CInputGroupText>\n                          </CInputGroup>\n                        </CCol>\n                      </CRow>\n                    </div>\n                    {item.status == 'Waiting for seller confirm' ? (\n                      <div className=\"mb-3\">\n                        <CRow>\n                          <CCol xs>\n                            <CButton color=\"success\" onClick={() => cfOrder(item.idOrder)}>\n                              {' '}\n                              Xác nhận{' '}\n                            </CButton>\n                          </CCol>\n                          <CCol>\n                            <CButton color=\"danger\" onClick={() => clOrder(item.idOrder)}>\n                              {' '}\n                              Hủy{' '}\n                            </CButton>\n                          </CCol>\n                        </CRow>\n                      </div>\n                    ) : (\n                      ''\n                    )}\n                  </CCardBody>\n                </CCollapse>\n              )\n            }\n          }}\n          sorterValue={{ column: 'name', state: 'asc' }}\n          tableFilter\n          tableProps={{\n            striped: true,\n            hover: true\n          }}\n        />\n      </Suspense>\n    </div>\n  )\n}\n\nexport default TableOrder\n"],"sourceRoot":""}